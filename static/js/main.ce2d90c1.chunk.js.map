{"version":3,"sources":["TodoItem/TodoItem.js","TodoItem/index.js","TodoList/TodoList.js","TodoList/index.js","App.js","reportWebVitals.js","index.js"],"names":["containterStyles","marginTop","TodoItem","createTasks","item","className","Box","bgcolor","color","p","m","Grid","container","direction","justify","alignItems","text","Button","variant","onClick","props","deleteItem","key","ListItems","this","entries","map","Container","maxWidth","style","Component","css","fontSize","textAlign","input","button","marginLeft","TodoList","onSubmit","addItem","TextField","type","ref","inputElement","value","currentItem","onChange","handleInput","IconButton","aria-label","App","event","target","Date","now","setState","e","preventDefault","newItem","state","items","jsonItems","JSON","stringify","localStorage","setItem","console","log","filteredItems","filter","parse","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce2d90c1.chunk.js","sourcesContent":["import { Component } from 'react'\nimport './index.css'\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nconst containterStyles = {\n    marginTop: \"10px\"\n}\n\nclass TodoItem extends Component {\n    createTasks = item => {\n        return (\n            <div className=\"TodoList\" key={item.key}>\n                <Box\n                    bgcolor=\"primary.main\"\n                    color=\"primary.contrastText\"\n                    p={2}\n                    m={2}\n                >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-around\"\n                        alignItems=\"center\"\n                    >\n                        <div> {item.text} </div>\n                        <Button variant=\"contained\" color=\"secondary\"\n                            onClick={() => this.props.deleteItem(item.key)}>\n                            Done </Button>\n                    </Grid>\n                </Box >\n            </div>\n        )\n    }\n    render() {\n        const listEn = this.props.entries // массив ключ - значений\n        const ListItems = listEn.map(this.createTasks) // метод \n        return <Container maxWidth=\"sm\" style={containterStyles}> {ListItems} </Container>\n    }\n}\nexport default TodoItem","import TodoItem from './TodoItem'\n\n\nexport default TodoItem","import {Component} from 'react'\nimport './index.css'\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\n\nconst css = {\n    color: \"red\",\n    fontSize: \"20px\",\n    textAlign: \"center\"\n  }\n  const input = {\n    fontSize: \"20px\",\n    color: \"red\"\n  }\n  const button = {\n    marginLeft: \"10px\",\n  }\n\nclass TodoList extends Component{\n    render(){\n    return (\n        <div className=\"App\" style={css}>\n            <h1> Todo </h1>\n            <form onSubmit= {this.props.addItem} >\n                <TextField  \n                type=\"text\" style={input} \n                ref={this.props.inputElement}\n                value = {this.props.currentItem.item}\n                onChange={this.props.handleInput}\n                />\n                <IconButton \n                  type=\"submit\"\n                  aria-label=\"add\"\n                  style={button}\n                  >                  \n                    <AddIcon />\n                  </IconButton>\n            </form>\n        </div>\n      );\n    }\n}\nexport default TodoList","import TodoList from './TodoList'\n\n\nexport default TodoList","import './App.css';\nimport { Component } from 'react'\nimport TodoItem from './TodoItem';\nimport TodoList from './TodoList';\n\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      items: [{ text: \"Первое дело\", key: 'first' }],\n      currentItem: { text: \"Первое дело\", key: 'first' }\n      //  дергаем LocalStorage при загрузке ComponentDidMount и писать в state \n    }\n    // const databaseRef = database.ref()\n    // const todos = dataRef.child('todos')\n\n  }\n  handleInput = event => {\n    const itemText = event.target.value\n    const currentItem = { text: itemText, key: Date.now() }\n    this.setState({\n      currentItem,\n    })\n\n  }\n  addItem = e => {\n    e.preventDefault()\n    const newItem = this.state.currentItem;\n    if (newItem.text !== '') {\n      const items = [...this.state.items, newItem]\n      this.setState({\n        items,\n        currentItem: { text: '', key: '' }\n      })\n      // после обновления  state обновляем и localStorage\n      const jsonItems = JSON.stringify(items)\n      localStorage.setItem(\"items\", jsonItems)\n      // todosRef.push(currentItem)\n    }\n  }\n  deleteItem = key => {\n    console.log(key)\n    const filteredItems = this.state.items.filter(item => {\n      return item.key !== key\n    })\n\n    console.log(filteredItems)\n    this.setState({\n      items: filteredItems,\n    })\n    // текущий отфильтрованный items законсервировать в json\n    // обновить значение items в localStorage\n    const items = JSON.stringify(filteredItems)\n    localStorage.setItem('items', items)\n  }\n\n\n  // удаление из LocalStorage  по ключу\n  // добавить React UI\n  // Добавить LocalStorage\n  // Добавить  API - Либо самописное либо Firebase \n  // добавить компоненты, которые могут быть полезны - календарь с часами\n  // TypeScript\n  // Деплой c Docker nginx - отдавать статику  \n\n  componentDidMount() {\n    const items = JSON.parse(localStorage.getItem('items'))\n    if (items) {\n      this.setState({\n        items,\n      })\n    } else{\n      this.setState({\n        items:[]\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TodoList\n          addItem={this.addItem}\n          inputElement={this.inputElement}\n          handleInput={this.handleInput}\n          currentItem={this.state.currentItem}\n        />\n        <TodoItem entries={this.state.items} deleteItem={this.deleteItem} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}